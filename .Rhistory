plot(rep(1, length(pointsDPP)), pointsDPP,
ylim=c(1, n), xlim=c(.4, 3.2), xaxt='n', ylab="Points", xlab="")
points(rep(2, length(pointsPoisson)), pointsPoisson, pch=5)
legend("topright", inset=.05, legend=c("DPP", "Poisson"), pch=c(1, 5))
pointsDPP <- SamplingDPP(lambda, eigenvectors)
pointsPoisson <- SamplingDPP(lambda2, eigenvectors2)
plot(rep(1, length(pointsDPP)), pointsDPP,
ylim=c(1, n), xlim=c(.4, 3.2), xaxt='n', ylab="Points", xlab="")
points(rep(2, length(pointsPoisson)), pointsPoisson, pch=5)
legend("topright", inset=.05, legend=c("DPP", "Poisson"), pch=c(1, 5))
pointsDPP <- SamplingDPP(lambda, eigenvectors)
pointsPoisson <- SamplingDPP(lambda2, eigenvectors2)
plot(rep(1, length(pointsDPP)), pointsDPP,
ylim=c(1, n), xlim=c(.4, 3.2), xaxt='n', ylab="Points", xlab="")
points(rep(2, length(pointsPoisson)), pointsPoisson, pch=5)
legend("topright", inset=.05, legend=c("DPP", "Poisson"), pch=c(1, 5))
pointsDPP <- SamplingDPP(lambda, eigenvectors)
pointsPoisson <- SamplingDPP(lambda2, eigenvectors2)
plot(rep(1, length(pointsDPP)), pointsDPP,
ylim=c(1, n), xlim=c(.4, 3.2), xaxt='n', ylab="Points", xlab="")
points(rep(2, length(pointsPoisson)), pointsPoisson, pch=5)
legend("topright", inset=.05, legend=c("DPP", "Poisson"), pch=c(1, 5))
pointsDPP <- SamplingDPP(lambda, eigenvectors)
pointsPoisson <- SamplingDPP(lambda2, eigenvectors2)
plot(rep(1, length(pointsDPP)), pointsDPP,
ylim=c(1, n), xlim=c(.4, 3.2), xaxt='n', ylab="Points", xlab="")
points(rep(2, length(pointsPoisson)), pointsPoisson, pch=5)
legend("topright", inset=.05, legend=c("DPP", "Poisson"), pch=c(1, 5))
pointsDPP <- SamplingDPP(lambda, eigenvectors)
pointsPoisson <- SamplingDPP(lambda2, eigenvectors2)
plot(rep(1, length(pointsDPP)), pointsDPP,
ylim=c(1, n), xlim=c(.4, 3.2), xaxt='n', ylab="Points", xlab="")
points(rep(2, length(pointsPoisson)), pointsPoisson, pch=5)
legend("topright", inset=.05, legend=c("DPP", "Poisson"), pch=c(1, 5))
# Points in the square.
m <- 19
n <- (m + 1)^2
q <- rep(sqrt(m), n)
# phi <- rep(0, n^2)
# time <- proc.time()
# for (i in 1:n) {
#   for (j in 1:n) {
#     phi[(i - 1) * n + j] <- dnorm(sqrt(m) * Distance(i, j, m))
#   }
# }
# proc.time() - time
x <- ceiling(1:n^2 / n)
y <- rep(1:n, n)
time <- proc.time()
phi <- dnorm(sqrt(m) *matrix(Distance(x, y, m), n))
proc.time() - time
# General part.
d <- length(phi) / n
phi <- matrix(phi, ncol=n)
for (i in 1:d) {
phi[i, ] <- sum(phi[i, ]^2)^(-1/2) * phi[i, ]
}
B <- t(phi) * q
time <- proc.time()
L <- B %*% t(B)
proc.time() - time
# Sample from both point processes and plot the points in the square
# par(mfrow = c(1,1))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
# Points in the square.
m <- 39
n <- (m + 1)^2
q <- rep(sqrt(m), n)
x <- ceiling(1:n^2 / n)
y <- rep(1:n, n)
time <- proc.time()
phi <- dnorm(sqrt(m) *matrix(Distance(x, y, m), n))
proc.time() - time
# General part.
d <- length(phi) / n
phi <- matrix(phi, ncol=n)
for (i in 1:d) {
phi[i, ] <- sum(phi[i, ]^2)^(-1/2) * phi[i, ]
}
B <- t(phi) * q
C <- t(B) %*% B
time <- proc.time()
L <- B %*% t(B)
proc.time() - time
edc <- eigen(L)
lambda <- edc$values
lambda[abs(lambda) < 10^(-9)] <- 0
# qr(L)$rank
min(lambda)
mean <- sum(lambda / (1 + lambda))
eigenvectors <- edc$vectors
D <- diag(rep(mean / n / (1 - mean / n), n))
edc2 <- eigen(D)
lambda2 <- edc2$values
sum(lambda2 / (1 + lambda2))
eigenvectors2 <- edc2$vectors
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
# Points in the square.
m <- 29
n <- (m + 1)^2
q <- rep(sqrt(m), n)
x <- ceiling(1:n^2 / n)
y <- rep(1:n, n)
time <- proc.time()
phi <- dnorm(sqrt(m) *matrix(Distance(x, y, m), n))
proc.time() - time
# General part.
d <- length(phi) / n
phi <- matrix(phi, ncol=n)
for (i in 1:d) {
phi[i, ] <- sum(phi[i, ]^2)^(-1/2) * phi[i, ]
}
B <- t(phi) * q
C <- t(B) %*% B
time <- proc.time()
L <- B %*% t(B)
proc.time() - time
edc <- eigen(L)
lambda <- edc$values
lambda[abs(lambda) < 10^(-9)] <- 0
# qr(L)$rank
min(lambda)
mean <- sum(lambda / (1 + lambda))
eigenvectors <- edc$vectors
D <- diag(rep(mean / n / (1 - mean / n), n))
edc2 <- eigen(D)
lambda2 <- edc2$values
sum(lambda2 / (1 + lambda2))
eigenvectors2 <- edc2$vectors
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
# Points in the square.
m <- 29
n <- (m + 1)^2
q <- rep(sqrt(m), n)
proc.time() - time
phi <- rep(0, n^2)
time <- proc.time()
for (i in 1:n) {
for (j in 1:n) {
phi[(i - 1) * n + j] <- dnorm(sqrt(m) * Distance(i, j, m))
}
}
proc.time() - time
# General part.
d <- length(phi) / n
phi <- matrix(phi, ncol=n)
for (i in 1:d) {
phi[i, ] <- sum(phi[i, ]^2)^(-1/2) * phi[i, ]
}
B <- t(phi) * q
time <- proc.time()
L <- B %*% t(B)
proc.time() - time
edc <- eigen(L)
lambda <- edc$values
lambda[abs(lambda) < 10^(-9)] <- 0
# qr(L)$rank
min(lambda)
mean <- sum(lambda / (1 + lambda))
eigenvectors <- edc$vectors
D <- diag(rep(mean / n / (1 - mean / n), n))
edc2 <- eigen(D)
lambda2 <- edc2$values
sum(lambda2 / (1 + lambda2))
eigenvectors2 <- edc2$vectors
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataDPP <- sort(SamplingDPP(lambda, eigenvectors))
pointsDPP <- matrix(Coordinates(dataDPP, m), ncol=2)
plot(pointsDPP, xlim=0:1, ylim=0:1, xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
dataPoisson <- sort(SamplingDPP(lambda2, eigenvectors2))
pointsPoisson <- matrix(Coordinates(dataPoisson, m), ncol=2)
plot(pointsPoisson, xlim=0:1, ylim=0:1,
# xaxt='n', yaxt='n',
xlab="", ylab="", asp=1)
